name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
    paths:
      - 'web/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        run: |
          cd web
          npm ci

      - name: Build
        env:
          NEXT_PUBLIC_BUILD_SHA: ${{ github.sha }}
        run: |
          cd web
          opennextjs-cloudflare build

      # Step 1Ô∏è‚É£ - List KV namespaces
      - name: List Cloudflare KV namespaces
        id: list-kv
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: kv namespace list

      # Step 2Ô∏è‚É£ - Create KV if missing
      - name: Create Cloudflare KV namespace if missing
        if: ${{ !contains(steps.list-kv.outputs.command-output, 'worker-exception-notify-workspace') }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: kv namespace create "worker-exception-notify-workspace"

      # Step 3Ô∏è‚É£ - Re-list KV after possible creation
      - name: Refresh Cloudflare KV namespace list
        id: list-kv-again
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: kv namespace list

      # Step 4Ô∏è‚É£ - Extract correct KV ID
      - name: Extract KV namespace ID
        id: extract-kv-id
        run: |
          echo "üîç Extracting KV ID for 'worker-exception-notify-workspace'..."
          KV_ID=$(echo '${{ steps.list-kv-again.outputs.command-output }}' | jq -r '.[] | select(.title=="worker-exception-notify-workspace") | .id')
          if [ -z "$KV_ID" ] || [ "$KV_ID" = "null" ]; then
            echo "‚ùå Failed to extract KV_NAMESPACE_ID!"
            echo "Raw JSON output below:"
            echo '${{ steps.list-kv-again.outputs.command-output }}'
            exit 1
          fi
          echo "‚úÖ Found KV_NAMESPACE_ID=$KV_ID"
          echo "KV_NAMESPACE_ID=$KV_ID" >> $GITHUB_ENV

      # Step 5Ô∏è‚É£ - Deploy to Cloudflare Workers
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          preCommands: |
            echo "üöÄ Starting deployment..."
            echo "Using KV ID: $KV_NAMESPACE_ID"
            envsubst < web/wrangler.template.toml > web/wrangler.toml
            echo "‚úÖ Generated wrangler.toml:"
            cat web/wrangler.toml
          command: |
            deploy --name=exception-notify-worker
          postCommands: |
            echo "üéâ Deployment finished!"
            wrangler whoami
